apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
data:
  prometheus.yaml: |-
    {
        "apiVersion": 1,
        "datasources": [
            {
               "access":"proxy",
                "editable": true,
                "name": "prometheus",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://prometheus-service.monitoring.svc:8080",
                "version": 1
            }
        ]
    }
  grafana.ini: |-
    [server]
      domain = [grafana.yourdomain.example]
      root_url: https://[grafana.yourdomain.example]
      serve_from_sub_path: true
  
    [database]
      type = postgres
      host = [host]
      name = [db_name]
      user = [db_user]
      password = [db_password]
      ssl_mode = disable
      
    [auth]
      disable_login_form = false
      oauth_allow_insecure_email_lookup=true

    [auth.generic_oauth]
      enabled = true
      name = Login
      allow_sign_up = true
      client_id = grafana 
      client_secret = [client_secret]
      scopes = openid email profile offline_access roles
      email_attribute_path = email
      login_attribute_path = preferred_username
      name_attribute_path = full_name
      auth_url = https://auth.yourdomain.example/realms/your_realms_name/protocol/openid-connect/auth
      token_url = https://auth.yourdomain.example/realms/your_realms_name/protocol/openid-connect/token
      api_url = https://auth.yourdomain.example/realms/your_realms_name/protocol/openid-connect/userinfo
      role_attribute_path = contains(roles[*], 'admin') && 'Admin' || contains(roles[*], 'editor') && 'Editor' || 'Viewer'